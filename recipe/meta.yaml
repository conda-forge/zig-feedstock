{% set name = "zig" %}
{% set version = "0.12.0" %}
{% set llvm_version = "17.0.6" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://github.com/ziglang/{{ name }}/archive/refs/tags/{{ version }}.tar.gz
    sha256: 57d7e0ad565ef734d9f3fe8cff7a815f2ab012ec3d8e155a316dfc79f789c432
    patches:
      - 0001-add-llvm-config.patch  # [not win]
      - 0002-add-patchelf-zig2.patch  # [linux and x86_64]
      - 0003-remove-abi-error.patch  # [linux and x86_64]
    folder: zig-source

  - folder: zig-bootstrap  # [(win or osx) and x86_64]
    url: https://ziglang.org/download/0.12.0/zig-windows-x86_64-0.12.0.zip  # [win and x86_64]
    sha256: 2199eb4c2000ddb1fba85ba78f1fcf9c1fb8b3e57658f6a627a8e513131893f5  # [win and x86_64]
    url: https://ziglang.org/download/0.12.0/zig-macos-x86_64-0.12.0.tar.xz  # [osx and x86_64]
    sha256: 4d411bf413e7667821324da248e8589278180dbc197f4f282b7dbb599a689311  # [osx and x86_64]

build:
  number: 2
  script_env:
    - LIBC_CONDA_VERSION=2.28  # [linux and x86_64]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ stdlib("c") }}
    - cmake >=3.5
    - libclang-cpp {{ llvm_version }}
    - ninja
  host:
    - clangdev {{ llvm_version }}
    - llvmdev {{ llvm_version }}
    - llvm {{ llvm_version }}
    - lld {{ llvm_version }}
    - libclang-cpp {{ llvm_version }}
    - zlib
    - zstd

test:
  commands:
    - zig version
    - zig zen
    - zig init
    - zig test test/behavior.zig  # [not win]
    - test test\\behavior.zig  # [win]
  source_files:
    - test

about:
  home: https://ziglang.org/
  license: MIT
  license_family: MIT
  license_file: zig-source/LICENSE
  summary: Zig is a general-purpose programming language and toolchain for maintaining robust, optimal, and reusable software.
  description: |
    Zig is a general-purpose programming language and toolchain for maintaining robust, optimal, and reusable software.
    Robust: Behavior is correct even for edge cases such as out of memory.
    Optimal: Write programs the best way they can behave and perform.
    Reusable: The same code works in many environments which have different constraints.
    Maintainable: Precisely communicate intent to the compiler and other programmers. 
      The language imposes a low overhead to reading code and is resilient to changing requirements and environments.
  doc_url: https://ziglang.org/documentation/{{ version }}/
  dev_url: https://github.com/ziglang/zig

extra:
  recipe-maintainers:
    - MementoRC
    - xmnlab
