{% set name = "zig" %}
{% set version = "0.13.0" %}
{% set llvm_version = "18" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://github.com/ziglang/zig/archive/refs/tags/{{ version }}.tar.gz
    sha256: d3912858003e340f315224bf177d0f441d86b81f62854f5c141b6d51ab6b5516
    folder: zig-source

  - folder: zig-bootstrap  # [(win or osx) and x86_64]
    url: https://ziglang.org/builds/zig-windows-x86_64-0.13.0.zip  # [win and x86_64]
    sha256: d859994725ef9402381e557c60bb57497215682e355204d754ee3df75ee3c158  # [win and x86_64]
    url: https://ziglang.org/builds/zig-macos-x86_64-0.13.0.tar.xz  # [osx and x86_64]
    sha256: 4d411bf413e7667821324da248e8589278180dbc197f4f282b7dbb599a689311  # [osx and x86_64]

build:
  number: 2
  skip: true  # [not win]
  script_env:
    - LIBC_CONDA_VERSION=2.28  # [linux and x86_64]

requirements:
  build:
    - {{ compiler("c") }}
    - {{ compiler("cxx") }}
    - {{ stdlib("c") }}
    - llvmdev {{ llvm_version }}
    - cmake >=3.5
    - libclang-cpp {{ llvm_version }}
    - ninja
  host:
    - clangdev {{ llvm_version }}
    - llvmdev {{ llvm_version }}
    - llvm {{ llvm_version }}
    - lld {{ llvm_version }}
    - libclang-cpp {{ llvm_version }}
    # - libcxx
    - zlib
    - zstd
  run:
    - {{ pin_compatible("libcxx", max_pin=None) }}  # [osx]
    - llvmdev {{ llvm_version }}

test:
  commands:
    - zig version
    - zig zen
    - zig init
    - zig test zig-source/test/behavior.zig  # [not win]
    - zig test zig-source\\test\\behavior.zig  # [win]
  source_files:
    - zig-source/test

about:
  home: https://ziglang.org/
  license: MIT
  license_family: MIT
  license_file: zig-source/LICENSE
  summary: Zig is a general-purpose programming language and toolchain for maintaining robust, optimal, and reusable software.
  description: |
    Zig is a general-purpose programming language and toolchain for maintaining robust, optimal, and reusable software.
    Robust: Behavior is correct even for edge cases such as out of memory.
    Optimal: Write programs the best way they can behave and perform.
    Reusable: The same code works in many environments which have different constraints.
    Maintainable: Precisely communicate intent to the compiler and other programmers. 
      The language imposes a low overhead to reading code and is resilient to changing requirements and environments.
  doc_url: https://ziglang.org/documentation/{{ version }}/
  dev_url: https://github.com/ziglang/zig

extra:
  recipe-maintainers:
    - MementoRC
    - xmnlab
